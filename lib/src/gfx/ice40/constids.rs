#![allow(dead_code, non_camel_case_types)]

use std::convert::TryFrom;

use anyhow::{Error, Result};
use num_derive::FromPrimitive;
use num_traits::FromPrimitive;

impl TryFrom<u32> for ConstId {
    type Error = Error;

    fn try_from(val: u32) -> Result<Self> {
        return match FromPrimitive::from_u32(val) {
            Some(res) => Ok(res),
            None => Err(Error::msg("Could not derive ConstId from value")),
        };
    }
}

#[derive(PartialEq, FromPrimitive, Debug)]
#[repr(u32)]
pub enum ConstId {
    // pin and port names
    I0 = 1,
    I1,
    I2,
    I3,
    O,
    LO,
    CIN,
    COUT,
    CEN,
    CLK,
    SR,

    MASK_0,
    MASK_1,
    MASK_2,
    MASK_3,
    MASK_4,
    MASK_5,
    MASK_6,
    MASK_7,
    MASK_8,
    MASK_9,
    MASK_10,
    MASK_11,
    MASK_12,
    MASK_13,
    MASK_14,
    MASK_15,

    RDATA_0,
    RDATA_1,
    RDATA_2,
    RDATA_3,
    RDATA_4,
    RDATA_5,
    RDATA_6,
    RDATA_7,
    RDATA_8,
    RDATA_9,
    RDATA_10,
    RDATA_11,
    RDATA_12,
    RDATA_13,
    RDATA_14,
    RDATA_15,

    WDATA_0,
    WDATA_1,
    WDATA_2,
    WDATA_3,
    WDATA_4,
    WDATA_5,
    WDATA_6,
    WDATA_7,
    WDATA_8,
    WDATA_9,
    WDATA_10,
    WDATA_11,
    WDATA_12,
    WDATA_13,
    WDATA_14,
    WDATA_15,

    WADDR_0,
    WADDR_1,
    WADDR_2,
    WADDR_3,
    WADDR_4,
    WADDR_5,
    WADDR_6,
    WADDR_7,
    WADDR_8,
    WADDR_9,
    WADDR_10,

    RADDR_0,
    RADDR_1,
    RADDR_2,
    RADDR_3,
    RADDR_4,
    RADDR_5,
    RADDR_6,
    RADDR_7,
    RADDR_8,
    RADDR_9,
    RADDR_10,

    WCLK,
    WCLKE,
    WE,

    RCLK,
    RCLKE,
    RE,

    PACKAGE_PIN,
    LATCH_INPUT_VALUE,
    CLOCK_ENABLE,
    INPUT_CLK,
    OUTPUT_CLK,
    OUTPUT_ENABLE,
    D_OUT_0,
    D_OUT_1,
    D_IN_0,
    D_IN_1,

    USER_SIGNAL_TO_GLOBAL_BUFFER,
    GLOBAL_BUFFER_OUTPUT,

    REFERENCECLK,
    EXTFEEDBACK,
    DYNAMICDELAY_0,
    DYNAMICDELAY_1,
    DYNAMICDELAY_2,
    DYNAMICDELAY_3,
    DYNAMICDELAY_4,
    DYNAMICDELAY_5,
    DYNAMICDELAY_6,
    DYNAMICDELAY_7,
    LOCK,
    PLLOUT_A,
    PLLOUT_B,
    PLLOUT_A_GLOBAL,
    PLLOUT_B_GLOBAL,
    BYPASS,
    RESETB,
    LATCHINPUTVALUE,
    SDO,
    SDI,
    SCLK,

    BOOT,
    S0,
    S1,

    ADDSUBBOT,
    ADDSUBTOP,
    AHOLD,
    A_0,
    A_1,
    A_10,
    A_11,
    A_12,
    A_13,
    A_14,
    A_15,
    A_2,
    A_3,
    A_4,
    A_5,
    A_6,
    A_7,
    A_8,
    A_9,
    BHOLD,
    B_0,
    B_1,
    B_10,
    B_11,
    B_12,
    B_13,
    B_14,
    B_15,
    B_2,
    B_3,
    B_4,
    B_5,
    B_6,
    B_7,
    B_8,
    B_9,
    CE,
    CHOLD,
    CI,
    CO,
    C_0,
    C_1,
    C_10,
    C_11,
    C_12,
    C_13,
    C_14,
    C_15,
    C_2,
    C_3,
    C_4,
    C_5,
    C_6,
    C_7,
    C_8,
    C_9,
    DHOLD,
    D_0,
    D_1,
    D_10,
    D_11,
    D_12,
    D_13,
    D_14,
    D_15,
    D_2,
    D_3,
    D_4,
    D_5,
    D_6,
    D_7,
    D_8,
    D_9,
    IRSTBOT,
    IRSTTOP,
    OHOLDBOT,
    OHOLDTOP,
    OLOADBOT,
    OLOADTOP,
    ORSTBOT,
    ORSTTOP,
    O_0,
    O_1,
    O_10,
    O_11,
    O_12,
    O_13,
    O_14,
    O_15,
    O_16,
    O_17,
    O_18,
    O_19,
    O_2,
    O_20,
    O_21,
    O_22,
    O_23,
    O_24,
    O_25,
    O_26,
    O_27,
    O_28,
    O_29,
    O_3,
    O_30,
    O_31,
    O_4,
    O_5,
    O_6,
    O_7,
    O_8,
    O_9,
    SIGNEXTIN,
    SIGNEXTOUT,
    ACCUMCI,
    ACCUMCO,

    CLKHF,
    CLKHFEN,
    CLKHFPU,
    CLKHF_FABRIC,
    TRIM0,
    TRIM1,
    TRIM2,
    TRIM3,
    TRIM4,
    TRIM5,
    TRIM6,
    TRIM7,
    TRIM8,
    TRIM9,

    CLKLF,
    CLKLFEN,
    CLKLFPU,
    CLKLF_FABRIC,

    I2CIRQ,
    I2CWKUP,
    SBACKO,
    SBADRI0,
    SBADRI1,
    SBADRI2,
    SBADRI3,
    SBADRI4,
    SBADRI5,
    SBADRI6,
    SBADRI7,
    SBCLKI,
    SBDATI0,
    SBDATI1,
    SBDATI2,
    SBDATI3,
    SBDATI4,
    SBDATI5,
    SBDATI6,
    SBDATI7,
    SBDATO0,
    SBDATO1,
    SBDATO2,
    SBDATO3,
    SBDATO4,
    SBDATO5,
    SBDATO6,
    SBDATO7,
    SBRWI,
    SBSTBI,
    SCLI,
    SCLO,
    SCLOE,
    SDAI,
    SDAO,
    SDAOE,

    MCSNO0,
    MCSNO1,
    MCSNO2,
    MCSNO3,
    MCSNOE0,
    MCSNOE1,
    MCSNOE2,
    MCSNOE3,
    MI,
    MO,
    MOE,
    SCKI,
    SCKO,
    SCKOE,
    SCSNI,
    SI,
    SO,
    SOE,
    SPIIRQ,
    SPIWKUP,

    PU_ENB,
    WEAK_PU_ENB,

    LEDDADDR0,
    LEDDADDR1,
    LEDDADDR2,
    LEDDADDR3,
    LEDDCLK,
    LEDDCS,
    LEDDDAT0,
    LEDDDAT1,
    LEDDDAT2,
    LEDDDAT3,
    LEDDDAT4,
    LEDDDAT5,
    LEDDDAT6,
    LEDDDAT7,
    LEDDDEN,
    LEDDEXE,
    LEDDON,
    PWMOUT0,
    PWMOUT1,
    PWMOUT2,

    LEDPU,
    EN,
    RGBPU,
    CURREN,
    RGB0PWM,
    RGB1PWM,
    RGB2PWM,
    RGBLEDEN,
    RGB0,
    RGB1,
    RGB2,

    ADDRESS_0,
    ADDRESS_1,
    ADDRESS_10,
    ADDRESS_11,
    ADDRESS_12,
    ADDRESS_13,
    ADDRESS_2,
    ADDRESS_3,
    ADDRESS_4,
    ADDRESS_5,
    ADDRESS_6,
    ADDRESS_7,
    ADDRESS_8,
    ADDRESS_9,
    CHIPSELECT,
    CLOCK,
    DATAIN_0,
    DATAIN_1,
    DATAIN_10,
    DATAIN_11,
    DATAIN_12,
    DATAIN_13,
    DATAIN_14,
    DATAIN_15,
    DATAIN_2,
    DATAIN_3,
    DATAIN_4,
    DATAIN_5,
    DATAIN_6,
    DATAIN_7,
    DATAIN_8,
    DATAIN_9,
    DATAOUT_0,
    DATAOUT_1,
    DATAOUT_10,
    DATAOUT_11,
    DATAOUT_12,
    DATAOUT_13,
    DATAOUT_14,
    DATAOUT_15,
    DATAOUT_2,
    DATAOUT_3,
    DATAOUT_4,
    DATAOUT_5,
    DATAOUT_6,
    DATAOUT_7,
    DATAOUT_8,
    DATAOUT_9,
    MASKWREN_0,
    MASKWREN_1,
    MASKWREN_2,
    MASKWREN_3,
    POWEROFF,
    SLEEP,
    STANDBY,
    WREN,

    // cell and bel types
    ICESTORM_LC,
    ICESTORM_RAM,
    SB_IO,
    SB_GB,
    ICESTORM_PLL,
    SB_WARMBOOT,
    ICESTORM_DSP,
    ICESTORM_HFOSC,
    ICESTORM_LFOSC,
    SMCCLK,
    SB_I2C,
    SB_SPI,
    IO_I3C,
    SB_LEDDA_IP,
    SB_RGBA_DRV,
    ICESTORM_SPRAM,
    SB_LED_DRV_CUR,
    SB_RGB_DRV,

    // cell parameters
    DFF_ENABLE,
    CARRY_ENABLE,
    NEG_CLK,
    IO_STANDARD,
    A,
    ASYNC_SR,
    A_REG,
    A_SIGNED,
    BEL,
    BEL_PAD_INPUT,
    BOTADDSUB_CARRYSELECT,
    BOTADDSUB_LOWERINPUT,
    BOTADDSUB_UPPERINPUT,
    BOTOUTPUT_SELECT,
    BOT_8x8_MULT_REG,
    BUS_ADDR74,
    B_REG,
    B_SIGNED,
    C,
    CARRY_IN_MUX,
    CIN_CONST,
    CIN_SET,
    CLKHF_DIV,
    CURRENT_MODE,
    C_REG,
    D,
    DELAY_ADJMODE_FB,
    DELAY_ADJMODE_REL,
    DELAY_ADJUSTMENT_MODE_FEEDBACK,
    DELAY_ADJUSTMENT_MODE_RELATIVE,
    DIVF,
    DIVQ,
    DIVR,
    D_REG,
    E,
    ENABLE_ICEGATE_PORTA,
    ENABLE_ICEGATE_PORTB,
    FDA_FEEDBACK,
    FDA_RELATIVE,
    FEEDBACK_PATH,
    FILTER_RANGE,
    FOR_PAD_IN,
    GLB2LOCAL,
    GLB_NETWK,
    GLOBAL,
    GND,
    GRID_X,
    GRID_Y,
    GRID_Z,
    I,
    I2C_SLAVE_INIT_ADDR,
    INDEX,
    LEDDRST,
    LOCAL,
    LUTFF_COUT,
    LUTFF_GLOBAL,
    LUTFF_IN,
    LUTFF_IN_LUT,
    LUTFF_LOUT,
    LUTFF_OUT,
    LUT_INIT,
    MODE_8x8,
    NEG_CLK_R,
    NEG_CLK_W,
    NEG_TRIGGER,
    PACKAGEPIN,
    PIN_TYPE,
    PIPELINE_16x16_MULT_REG1,
    PIPELINE_16x16_MULT_REG2,
    PLLOUTCORE,
    PLLOUTCOREA,
    PLLOUTCOREB,
    PLLOUTGLOBAL,
    PLLOUTGLOBALA,
    PLLOUTGLOBALB,
    PLLOUT_SELECT,
    PLLOUT_SELECT_A,
    PLLOUT_SELECT_B,
    PLLOUT_SELECT_PORTA,
    PLLOUT_SELECT_PORTB,
    PLLTYPE,
    PULLUP,
    PULLUP_RESISTOR,
    Q,
    R,
    RCLKN,
    READ_MODE,
    RGB0_CURRENT,
    RGB1_CURRENT,
    RGB2_CURRENT,
    ROUTE_THROUGH_FABRIC,
    S,
    SB_CARRY,
    SB_DFF,
    SB_DFFE,
    SB_DFFER,
    SB_DFFES,
    SB_DFFESR,
    SB_DFFESS,
    SB_DFFN,
    SB_DFFNE,
    SB_DFFNER,
    SB_DFFNES,
    SB_DFFNESR,
    SB_DFFNESS,
    SB_DFFNR,
    SB_DFFNS,
    SB_DFFNSR,
    SB_DFFNSS,
    SB_DFFR,
    SB_DFFS,
    SB_DFFSR,
    SB_DFFSS,
    SB_GB_IO,
    SB_HFOSC,
    SB_LFOSC,
    SB_LUT4,
    SB_MAC16,
    SB_PLL40_2F_CORE,
    SB_PLL40_2F_PAD,
    SB_PLL40_2_PAD,
    SB_PLL40_CORE,
    SB_PLL40_PAD,
    SB_RAM40_4K,
    SB_RAM40_4KNR,
    SB_RAM40_4KNRNW,
    SB_RAM40_4KNW,
    SB_SPRAM256KA,
    SDA_INPUT_DELAYED,
    SDA_OUTPUT_DELAYED,
    SET_NORESET,
    SHIFTREG_DIVMODE,
    SHIFTREG_DIV_MODE,
    SP12_H,
    SP12_V,
    SP4_H,
    SP4_V,
    TEST_MODE,
    TOPADDSUB_CARRYSELECT,
    TOPADDSUB_LOWERINPUT,
    TOPADDSUB_UPPERINPUT,
    TOPOUTPUT_SELECT,
    TOP_8x8_MULT_REG,
    TRIM_EN,
    TYPE,
    VCC,
    WCLKN,
    WRITE_MODE,
    Y,
    hx1k,
    hx4k,
    hx8k,
    lp1k,
    lp384,
    lp4k,
    lp8k,
    no_promote_globals,
    opt_timing,
    pack,
    pcf_allow_unconstrained,
    place,
    placer,
    promote_logic,
    route,
    router,
    u1k,
    u2k,
    u4k,
    up3k,
    up5k,
}
